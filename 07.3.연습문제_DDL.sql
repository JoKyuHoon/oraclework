-- 1.
CREATE TABLE TB_CATEGORY(
    NAME VARCHAR2(10) ,
    USE_YN CHAR(1) DEFAULT 'Y'
);
-- 2.
CREATE TABLE TB_CLASS_TYPE(
    NO VARCHAR2(5) PRIMARY KEY,
    NAME VARCHAR2(10) 
);

-- 3.
ALTER TABLE TB_CATEGORY
ADD PRIMARY KEY (CATEGORY_NAME);


--4.
ALTER TABLE TB_CLASS_TYPE
MODIFY CLASS_TYPE_NAME NOT NULL;


--5.
ALTER TABLE TB_CLASS_TYPE MODIFY NO VARCHAR2(10);
ALTER TABLE TB_CATEGORY MODIFY CATEGORY_NAME VARCHAR2(20);

--6.  ALTER TABLE 테이블명 CHANGE 기존컬럼명 새컬럼명 컬럼타입;

ALTER TABLE TB_CLASS_TYPE RENAME COLUMN NO TO CLASS_TYPE_NO;

ALTER TABLE TB_CLASS_TYPE RENAME COLUMN NAME TO CLASS_TYPE_NAME;

ALTER TABLE TB_CATEGORY RENAME COLUMN NAME TO CATEGORY_NAME;

--7. ALTER TABLE 테이블명 DROP CONSTRAINT 기존_제약_이름;
ALTER TABLE TB_CLASS_TYPE DROP CONSTRAINT SYS_C007665;
ALTER TABLE TB_CLASS_TYPE ADD CONSTRAINT  PK_TB_CLASS_TYPE PRIMARY KEY (CLASS_TYPE_NO);

ALTER TABLE TB_CATEGORY DROP CONSTRAINT SYS_C007667;
ALTER TABLE TB_CATEGORY ADD CONSTRAINT  PK_CATEGORYE PRIMARY KEY (CATEGORY_NAME);

--8.
INSERT INTO TB_CATEGORY VALUES ('공학', 'Y');
INSERT INTO TB_CATEGORY VALUES ('자연과학', 'Y');
INSERT INTO TB_CATEGORY VALUES ('의학', 'Y');
INSERT INTO TB_CATEGORY VALUES ('예체능', 'Y');
INSERT INTO TB_CATEGORY VALUES ('인문사회', 'Y');
COMMIT;

--9.    - FOREIGN KEY : ALTER TABLE 테이블명 ADD FORIEGN KEY(컬럼명); REFERENCES 참조할 테이블명[(참조할컬럼명)]

CREATE TABLE TB_DEPARTMENT(
    CATEGORY VARCHAR2(20)
);
 ALTER TABLE TB_DEPARTMENT ADD CONSTRAINT FK_DEPARTMENT_CATEGORY FOREIGN KEY(CATEGORY) REFERENCES TB_CATEGORY(CATEGORY_NAME);


--10.
CREATE OR REPLACE VIEW  VW_학생일반정보 AS
SELECT STUDENT_NO AS 학번, STUDENT_NAME AS 학생이름, STUDENT_ADDRESS AS 주소
FROM TB_STUDENT;

-- VIEW를 통해 업데이트 가능하게
CREATE OR REPLACE VIEW VW_학생일반정보 AS
SELECT STUDENT_NO AS 학번, STUDENT_NAME AS 학생이름
FROM TB_STUDENT
WITH CHECK OPTION;


--11.
CREATE OR REPLACE VIEW VW_지도면담 AS
SELECT STUDENT_NAME 학생이름, 
           DEPARTMENT_NAME 학과이름, 
           PROFESSOR_NAME 지도교수이름 
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
JOIN TB_PROFESSOR ON(COACH_PROFESSOR_NO = PROFESSOR_NO);

--12.
CREATE OR REPLACE VIEW VW_학과별학생수 AS
SELECT DEPARTMENT_NAME 학과이름, COUNT(STUDENT_NO) 학생수
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
GROUP BY DEPARTMENT_NAME;

--13.
UPDATE VW_학생일반정보
SET 학생이름 = '조규호'
WHERE 학번 = 'A213046';




SELECT TEXT FROM USER_VIEWS WHERE VIEW_NAME = 'VW_학생일반정보';
SELECT * FROM USER_UPDATABLE_COLUMNS WHERE TABLE_NAME = 'VW_학생일반정보';

--14.
CREATE OR REPLACE VIEW  VW_학생일반정보 AS
SELECT STUDENT_NO AS 학번, STUDENT_NAME AS 학생이름, STUDENT_ADDRESS AS 주소
FROM TB_STUDENT
WITH READ ONLY;

CREATE OR REPLACE VIEW VW_누적수강생3과목 AS
SELECT COUNT(PREATTENDING_CLASS_NO) 과목번호, CLASS_NAME 과목이름
FROM TB_CLASS
GROUP BY COUNT(PREATTENDING_CLASS_NO);


--15.
SELECT *
FROM  (
            SELECT CLASS_NO 과목번호, CLASS_NAME 과목이름, COUNT(*) "누적수강생수(명)"
            FROM TB_GRADE
            JOIN TB_CLASS USING(CLASS_NO)
            WHERE TERM_NO LIKE '2009%'
            OR TERM_NO LIKE '2008%'
            OR TERM_NO LIKE '2007%'
            OR TERM_NO LIKE '2006%'
            OR TERM_NO LIKE '2005%'
            GROUP BY CLASS_NO, CLASS_NAME
            ORDER BY 3 DESC
)
WHERE ROWNUM <= 3;

SELECT *
FROM (
    SELECT CLASS_NO AS 과목번호, CLASS_NAME AS 과목이름, COUNT(*) AS "누적수강생수(명)"
    FROM TB_GRADE
    JOIN TB_CLASS USING (CLASS_NO)
    WHERE SUBSTR(TERM_NO, 1, 4) BETWEEN '2005' AND '2009'
    GROUP BY CLASS_NO, CLASS_NAME
    ORDER BY COUNT(*) DESC
)
WHERE ROWNUM <= 3;



